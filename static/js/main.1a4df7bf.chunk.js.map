{"version":3,"sources":["App.jsx","redux/actions.jsx","redux/reducer.jsx","redux/store.jsx","index.js"],"names":["App","dispatch","useDispatch","wishlist","useSelector","state","wishList","MainContainer","styled","main","InnerContainer","div","Form","form","InputBox","input","AddButton","button","SubmitButton","Item","wishlistJSX","map","item","index","key","onClick","event","type","payload","deleteItem","id","onSubmit","preventDefault","target","value","includes","name","wishlistContents","document","getElementById","innerHTML","alert","INITIAL_STATE","reducer","action","newWishlist","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode"],"mappings":"q+CA8GeA,MAxGf,WACE,IAAMC,EAAWC,cACXC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAEtCC,EAAgBC,IAAOC,KAAV,KAYbC,EAAiBF,IAAOG,IAAV,KASdC,EAAOJ,IAAOK,KAAV,KAGJC,EAAWN,IAAOO,MAAV,KAMRC,EAAYR,IAAOS,OAAV,KASTC,EAAeV,IAAOS,OAAV,KAOZE,EAAOX,IAAOG,IAAV,KAIJS,EAAcjB,EAASkB,KAAI,SAACC,EAAKC,GAAN,OAC/B,kBAACJ,EAAD,CACEK,IAAKD,EACLE,QAAS,SAAAC,GACPzB,ECtDkB,SAACqB,GACzB,MAAO,CACLK,KAXuB,cAYvBC,QAASN,GDmDIO,CAAWP,MAErBA,MAIL,OACE,kBAACf,EAAD,KACE,2CACA,kBAACG,EAAD,CAAgBoB,GAAG,YACdV,GAKL,kBAACR,EAAD,CAAMmB,SAAU,SAAAL,GACdA,EAAMM,iBACN,IAAIjB,EAAQW,EAAMO,OAAOlB,MAAMmB,MAC3B/B,EAASgC,SAASpB,IACpBd,EC/ED,CACL0B,KALoB,WAMpBC,QD6EuBb,IAEnBW,EAAMO,OAAOlB,MAAMmB,MAAQ,KAIzB,kBAACpB,EAAD,CAAUa,KAAK,OAAOS,KAAK,UAC3B,6BAEA,kBAACpB,EAAD,aAIJ,kBAACE,EAAD,CACEO,QAAS,WACP,IAAIY,EAAmBC,SAASC,eAAe,YACb,KAA/BF,EAAiBG,YAClBH,EAAiBG,UAAY,GAC7BC,MAAM,oCALZ,Y,sBE3FAC,EAAgB,CACpBpC,SAAU,IAyBGqC,EArBC,WAAoC,IAAnCtC,EAAkC,uDAA1BqC,EAAeE,EAAW,uCACjD,OAAQA,EAAOjB,MACb,IDZoB,WCalB,OAAO,2BACFtB,GADL,IAEEC,SAAS,GAAD,mBACHD,EAAMC,UADH,CAENsC,EAAOhB,YAGb,IDnBuB,cCoBrB,IAAMiB,EAAcxC,EAAMC,SAASwC,QAAO,SAAAxB,GAAI,OAAIA,IAASsB,EAAOhB,WAClE,OAAO,2BACFvB,GADL,IAEEC,SAAUuC,IAEd,QACE,OAAOxC,ICxBA0C,EAAQC,YACnBL,EACAM,OAAOC,8BAAgCD,OAAOC,gCCEhDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,QAGJT,SAASC,eAAe,W","file":"static/js/main.1a4df7bf.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {addItem, deleteItem} from './redux/actions';\nimport styled from 'styled-components';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const wishlist = useSelector(state => state.wishList);\n\n  const MainContainer = styled.main`\n    margin: 2vh auto;\n    padding: 10px 0 20px 0;\n    border: none;\n    border-radius: 10px;\n    height: 800px;\n    width: 600px;\n    background-color: #ffc0cb;\n    text-align: center;\n    box-shadow: 0px 0px 20px #000000;\n  `\n\n  const InnerContainer = styled.div`\n    margin: 0 auto;\n    border: 1px solid black;\n    height: 540px;\n    width: 400px;\n    background-color: white;\n    text-align: left;\n  `\n\n  const Form = styled.form`\n    margin: 20px auto 20px auto;\n  `\n  const InputBox = styled.input`\n    width: 380px;\n    height: 5px;\n    padding: 10px;\n  `\n\n  const AddButton = styled.button`\n    background-color: #90EE90;\n    border: none;\n    margin-top: 20px;\n    width: 100px;\n    height: 40px;\n    box-shadow: 0px 0px 3px #000000;\n  `\n\n  const SubmitButton = styled.button`\n    background-color: #90EE90;\n    border: none;\n    width: 400px;\n    height: 40px;\n    box-shadow: 0px 0px 3px #000000;\n  `\n  const Item = styled.div`\n    margin: 15px;\n  `\n  // Map through each wishlist item from the redux store (global state)\n  const wishlistJSX = wishlist.map((item,index) => (\n    <Item\n      key={index}\n      onClick={event => {\n        dispatch(deleteItem(item))\n    }}>\n      {item}\n    </Item>\n  ))\n\n  return (\n    <MainContainer>\n      <h1>MY WISHLIST</h1>\n      <InnerContainer id=\"wishlist\">\n          {wishlistJSX}\n      </InnerContainer>\n\n\n      {/* Form for adding item to wishlist with onSubmit functionality */}\n      <Form onSubmit={event => {\n        event.preventDefault()\n        let input = event.target.input.value;\n        if(!wishlist.includes(input)) {\n          dispatch(addItem(input));\n        }\n        event.target.input.value = \"\";\n      }}>\n\n          {/* Input text box */}\n          <InputBox type=\"text\" name=\"input\"/>\n          <br/>\n          {/* Button to add item to wishlist */}\n          <AddButton>Add</AddButton>\n      </Form>\n\n      {/* Button to submit wishlist */}\n      <SubmitButton\n        onClick={() => {\n          let wishlistContents = document.getElementById(\"wishlist\")\n          if(wishlistContents.innerHTML !== \"\") {\n            wishlistContents.innerHTML = \"\"\n            alert(\"Wish list submitted to Santa!\")\n          }\n      }}>\n        Submit\n      </SubmitButton>\n    </MainContainer>\n  )\n}\n\nexport default App;\n","export const ADD_ITEM = 'ADD_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\n\nexport const addItem = (item) => {\n  return {\n    type: ADD_ITEM,\n    payload: item,\n  };\n};\n\nexport const deleteItem = (item) => {\n  return {\n    type: DELETE_ITEM,\n    payload: item,\n  };\n};","import {\n  ADD_ITEM,\n  DELETE_ITEM,\n} from './actions';\n\nconst INITIAL_STATE = {\n  wishList: [],\n};\n\n// Complete the three cases below\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_ITEM:\n      return {\n        ...state,\n        wishList: [\n          ...state.wishList,\n          action.payload\n        ]\n      }\n    case DELETE_ITEM:\n      const newWishlist = state.wishList.filter(item => item !== action.payload)\n      return {\n        ...state,\n        wishList: newWishlist\n      };\n    default:\n      return state\n  }\n};\n\nexport default reducer;\n","import {createStore} from 'redux';\nimport reducer from './reducer';\n\nexport const store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}